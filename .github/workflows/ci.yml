name: CMS â€“ Deploy (self-hosted)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Backend + Frontend
    runs-on: self-hosted           # works with any self-hosted runner
    env:
      NODE_ENV: production
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      PORT: ${{ secrets.PORT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Show runner info
        run: |
          node -v
          npm -v
          uname -a

      - name: Stop PM2 apps (ignore if none)
        run: pm2 stop all || true

      # ---------- BACKEND ----------
      - name: Install backend deps
        working-directory: ./backend
        run: npm ci

      - name: Write backend .env
        working-directory: ./backend
        run: |
          cat > .env <<EOF
          MONGO_URI=${MONGO_URI}
          JWT_SECRET=${JWT_SECRET}
          PORT=${PORT}
          EOF
          echo "Wrote backend .env"

      - name: Start/Restart backend with PM2
        working-directory: ./backend
        run: |
          pm2 delete cms-backend || true
          pm2 start server.js --name cms-backend
          pm2 save

      # ---------- FRONTEND ----------
      - name: Install frontend deps
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        # If your axios uses relative '/api', you don't need REACT_APP_API_BASE.
        # If you DO use an env base URL, uncomment the next env line and use it in axios.
        # env:
        #   REACT_APP_API_BASE: http://localhost:${{ env.PORT }}/api
        run: npm run build

      - name: Deploy frontend to Nginx docroot
        run: |
          sudo mkdir -p /var/www/frontend
          sudo rm -rf /var/www/frontend/*
          sudo cp -r ./frontend/build/* /var/www/frontend/

      - name: Validate & reload Nginx
        run: |
          sudo nginx -t
          sudo systemctl reload nginx || sudo systemctl restart nginx

      - name: PM2 status
        run: pm2 ls